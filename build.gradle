plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'net.neoforged.gradle.userdev' version '7.0.96'
    id 'com.diffplug.spotless' version '6.25.0'
}

version = "${minecraft_version}-${mod_version}"
group = 'platinpython.rgbblocks'
base.archivesName = 'RGB Blocks'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft.accessTransformers.entry 'public net.minecraft.world.entity.item.FallingBlockEntity blockState'

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', 'rgbblocks'
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', 'rgbblocks'
        programArgument '--nogui'
    }

    data {
        programArguments.addAll '--mod', 'rgbblocks', '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    implementation 'net.neoforged:neoforge:20.4.167'

    compileOnly 'org.jspecify:jspecify:0.3.0'

    compileOnly 'curse.maven:the-one-probe-245211:5082106'
    if (rootProject.file('libs/FramedBlocks-10.0.0.1.jar').exists()) {
        implementation files('libs/FramedBlocks-10.0.0.1.jar')
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "rgbblocks",
                "Specification-Vendor"    : "PlatinPython",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "PlatinPython",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

apply from: rootProject.file('codeformat/spotless-rules.gradle')
